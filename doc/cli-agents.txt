*cli-agents.txt*             Seamless integration between Claude Code AI and Neovim

==============================================================================
CONTENTS                                                   *cli-agents-contents*

  1. Introduction .......................... |cli-agents-introduction|
  2. Installation .......................... |cli-agents-installation|
  3. Usage ................................ |cli-agents-usage|
  4. Configuration ........................ |cli-agents-configuration|
  5. Commands ............................. |cli-agents-commands|
  6. Mappings ............................. |cli-agents-mappings|
  7. Contributing ......................... |cli-agents-contributing|
  8. License .............................. |cli-agents-license|

==============================================================================
1. INTRODUCTION                                        *cli-agents-introduction*

Fork from [claude-code.nvim](https://github.com/greggh/claude-code.nvim),
CLI Agents is a plugin that provides seamless integration between the Claude
Code AI assistant (or similar command-line tool) and Neovim. It allows you to:

- Toggle Claude Code in a terminal window at the bottom of your Neovim screen
- Automatically detect and reload files modified by Claude Code
- Keep your Neovim buffers in sync with any changes made by Claude

NOTE: This plugin requires the official Claude Code CLI tool to be installed
and available in your system's PATH.

==============================================================================
2. INSTALLATION                                        *cli-agents-installation*

Install using your favorite plugin manager:

Using lazy.nvim:
>lua
  {
    "Butterblock233/CLIAgents.nvim",
    dependencies = {
      "nvim-lua/plenary.nvim", -- Required for git operations
    },
    dev = true,
    dir = "~/src/Projects/CLIAgents.nvim",
    keys = {
      { "<leader>cc", "<cmd>CLIAgents<CR>", mode = { "t", "n" }, desc = "Toggle CLI Agents" },
      { "<C-S-C>", "<cmd>CLIAgents<CR>", mode = { "t", "n" }, desc = "Toggle CLI Agents" },
      { "<A-c>", "<cmd>CLIAgents<CR>", mode = { "t", "n" }, desc = "Toggle CLI Agents" },
    },
    cmd = {
      "CLIAgents",
      "CLIAgentsResume",
      "CLIAgentsVersion"
    },
    opts = {
      providers = {
        default_provider = "claude", -- Default value
        --- @class ProviderConfig
        providers = {
          gemini = {
            command = "gemini",
            args_resume = "/chat resume",
          },
          codex = {
            command = "codex",
          },
        },
      },
      shell = {
        separator = ";",
      },
      window = {
        split_ratio = 0.3, -- Percentage of screen for the terminal window (height for horizontal, width for vertical splits)
        ---@type "botright" | "topleft" | "vertical" | "float"
        position = "float", -- Position of the window: "botright", "topleft", "vertical", "float", etc.
      },
      keymaps = {
        toggle = {
          -- normal = "<C-l>", -- Normal mode keymap for toggling Claude Code, false to disable
          -- terminal = "<C-l>", -- Terminal mode keymap for toggling Claude Code, false to disable
          variants = {
            continue = "<leader>cC", -- Normal mode keymap for Claude Code with continue flag
            verbose = "<leader>cV", -- Normal mode keymap for Claude Code with verbose flag
          },
        },
        window_navigation = true, -- Enable window navigation keymaps (<C-h/j/k/l>)
        scrolling = true, -- Enable scrolling keymaps (<C-f/b>) for page up/down
      },
    },
  }
<

PREREQUISITES:
- Neovim 0.7.0 or later
- Claude Code CLI tool (https://github.com/anthropics/claude-code) or any
similar tools like `codex` or `gemini`
- plenary.nvim plugin (https://github.com/nvim-lua/plenary.nvim) for git operations

==============================================================================
3. USAGE                                                    *cli-agents-usage*

- Use the `:CLIAgents` command to toggle the Claude Code terminal window
- Press <leader>ac in normal mode to toggle Claude Code terminal window
- Press <C-o> in the terminal to close the Claude Code window
- When Claude Code modifies files that are open in Neovim, they'll be
  automatically reloaded
- When in a git repository, Claude Code will automatically use the git root
  directory as its working directory using pushd/popd commands (configurable)

==============================================================================
4. CONFIGURATION                                    *cli-agents-configuration*

Configure the plugin by passing a table to the setup function. Below is the
default configuration:

>lua
  require("claude-code").setup({
    -- Terminal window settings
    window = {
      split_ratio = 0.3,      -- Percentage of screen for the terminal window (height or width)
      position = "botright",  -- Position of the window: "botright", "topleft", "vertical"/"vsplit", "float", etc.
      enter_insert = true,    -- Whether to enter insert mode when opening Claude Code
      start_in_normal_mode = false, -- Whether to start in normal mode instead of insert mode
      hide_numbers = true,    -- Hide line numbers in the terminal window
      hide_signcolumn = true, -- Hide the sign column in the terminal window

      -- Floating window configuration (only applies when position = "float")
      float = {
        width = "80%",        -- Width: number of columns or percentage string
        height = "80%",       -- Height: number of rows or percentage string
        row = "center",       -- Row position: number, "center", or percentage string
        col = "center",       -- Column position: number, "center", or percentage string
        relative = "editor",  -- Relative to: "editor" or "cursor"
        border = "rounded",   -- Border style: "none", "single", "double", "rounded", "solid", "shadow"
      },
    },
    -- File refresh settings
    refresh = {
      enable = true,           -- Enable file change detection
      updatetime = 100,        -- updatetime when Claude Code is active (milliseconds)
      timer_interval = 1000,   -- How often to check for file changes (milliseconds)
      show_notifications = true, -- Show notification when files are reloaded
    },
    -- Git project settings
    git = {
      use_git_root = true,     -- Set CWD to git root when opening Claude Code (if in git project)
    },
    -- Command settings
    command = "claude",        -- Command used to launch Claude Code (do not include --cwd)
    -- Command variants
    command_variants = {
      -- Conversation management
      continue = "--continue", -- Resume the most recent conversation
      resume = "--resume",     -- Display an interactive conversation picker

      -- Output options
      verbose = "--verbose",   -- Enable verbose logging with full turn-by-turn output
    },
    -- Keymaps
    keymaps = {
      toggle = {
        normal = "<leader>ac",  -- Normal mode keymap for toggling Claude Code
        terminal = "<C-o>",     -- Terminal mode keymap for toggling Claude Code
        variants = {
          continue = "<leader>cC", -- Normal mode keymap for Claude Code with continue flag
          verbose = "<leader>cV",  -- Normal mode keymap for Claude Code with verbose flag
        },
      }
    }
  })
<

==============================================================================
5. COMMANDS                                                *cli-agents-commands*

:CLIAgents                                                       *:CLIAgents*
    Toggle the CLI Agents terminal window.

Conversation Management Commands:

:CLIAgentsResume                                             *:CLIAgentsResume*
    Toggle Claude Code with the --resume flag to display an interactive conversation picker.

Note: Commands are automatically generated for each entry in your command_variants configuration.

==============================================================================
6. MAPPINGS                                                *cli-agents-mappings*

Default key mappings:

  <leader>ac   Toggle Claude Code terminal window (normal mode)
  <C-.>        Toggle Claude Code terminal window (both normal and terminal modes)

Variant mode mappings (if configured):

  <leader>cC   Toggle Claude Code with --continue flag
  <leader>cV   Toggle Claude Code with --verbose flag

Additionally, when in the Claude Code terminal:

  <C-h>        Move to the window on the left
  <C-j>        Move to the window below
  <C-k>        Move to the window above
  <C-l>        Move to the window on the right
  <C-f>        Scroll full-page down
  <C-b>        Scroll full-page up

Note: After scrolling with <C-f> or <C-b>, you'll need to press the 'i' key
to re-enter insert mode so you can continue typing to Claude Code.

You can customize these mappings in the configuration.

==============================================================================
7. CONTRIBUTING                                          *cli-agents-contributing*

Contributions to Claude Code are welcome! If you would like to contribute,
please check the CONTRIBUTING.md file in the repository for guidelines:
https://github.com/greggh/cli-agents.nvim/blob/main/CONTRIBUTING.md

==============================================================================
8. LICENSE                                                  *cli-agents-license*

MIT License

 vim:tw=78:ts=8:ft=help:norl:
